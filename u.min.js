const all=(a,b=Boolean)=>a.every(b),allEqual=a=>a.every(b=>b===a[0]),approximatelyEqual=(a,b,c=.001)=>Math.abs(a-b)<c,arrayToCSV=(a,b=",")=>a.map(a=>a.map(a=>`"${a}"`).join(b)).join("\n"),arrayToHtmlList=(a,b)=>(c=>(c=document.querySelector("#"+b),c.innerHTML+=a.map(a=>`<li>${a}</li>`).join("")))(),attempt=(a,...b)=>{try{return a(...b)}catch(a){return a instanceof Error?a:new Error(a)}},average=(...a)=>a.reduce((a,b)=>a+b,0)/a.length,averageBy=(a,b)=>a.map("function"==typeof b?b:a=>a[b]).reduce((a,b)=>a+b,0)/a.length,bifurcate=(a,b)=>a.reduce((a,c,d)=>(a[b[d]?0:1].push(c),a),[[],[]]),bifurcateBy=(a,b)=>a.reduce((a,c,d)=>(a[b(c,d)?0:1].push(c),a),[[],[]]),bottomVisible=()=>document.documentElement.clientHeight+window.scrollY>=(document.documentElement.scrollHeight||document.documentElement.clientHeight),byteSize=a=>new Blob([a]).size,capitalize=([a,...b])=>a.toUpperCase()+b.join(""),capitalizeEveryWord=a=>a.replace(/\b[a-z]/g,a=>a.toUpperCase()),castArray=a=>Array.isArray(a)?a:[a],compact=a=>a.filter(Boolean),countOccurrences=(a,b)=>a.reduce((c,a)=>a===b?c+1:c,0),currentURL=()=>window.location.href,dayOfYear=a=>Math.floor((a-new Date(a.getFullYear(),0,0))/1e3/60/60/24),decapitalize=([a,...b])=>a.toLowerCase()+b.join(""),deepFlatten=a=>[].concat(...a.map(a=>Array.isArray(a)?deepFlatten(a):a)),defaults=(a,...b)=>Object.assign({},a,...b.reverse(),a),defer=(a,...b)=>setTimeout(a,1,...b),degreesToRads=a=>a*Math.PI/180,difference=(c,a)=>{const b=new Set(a);return c.filter(a=>!b.has(a))},differenceBy=(c,a,b)=>{const d=new Set(a.map(b));return c.filter(a=>!d.has(b(a)))},differenceWith=(a,b,c)=>a.filter(d=>-1===b.findIndex(a=>c(d,a))),digitize=a=>[...`${a}`].map(a=>parseInt(a)),distance=(a,b,c,d)=>Math.hypot(c-a,d-b),drop=(a,b=1)=>a.slice(b),dropRight=(a,b=1)=>a.slice(0,-b),dropRightWhile=(a,b)=>{for(;0<a.length&&!b(a[a.length-1]);)a=a.slice(0,-1);return a},dropWhile=(a,b)=>{for(;0<a.length&&!b(a[0]);)a=a.slice(1);return a},elementContains=(a,b)=>a!==b&&a.contains(b),filterNonUnique=a=>[...new Set(a)],findKey=(a,b)=>Object.keys(a).find(c=>b(a[c],c,a)),findLast=(a,b)=>a.filter(b).pop(),flatten=(a,b=1)=>a.reduce((c,a)=>c.concat(1<b&&Array.isArray(a)?flatten(a,b-1):a),[]),forEachRight=(a,b)=>a.slice(0).reverse().forEach(b),forOwn=(a,b)=>Object.keys(a).forEach(c=>b(a[c],c,a)),functionName=a=>(console.debug(a.name),a),getColonTimeFromDate=a=>a.toTimeString().slice(0,8),getDaysDiffBetweenDates=(a,b)=>(b-a)/86400000,getStyle=(a,b)=>getComputedStyle(a)[b],getType=a=>a===void 0?"undefined":null===a?"null":a.constructor.name.toLowerCase(),hasClass=(a,b)=>a.classList.contains(b),head=a=>a[0],hide=(...a)=>[...a].forEach(a=>a.style.display="none"),httpsRedirect=()=>{"https:"!==location.protocol&&location.replace("https://"+location.href.split("//")[1])},indexOfAll=(a,b)=>a.reduce((a,c,d)=>c===b?[...a,d]:a,[]),initial=a=>a.slice(0,-1),insertAfter=(a,b)=>a.insertAdjacentHTML("afterend",b),insertBefore=(a,b)=>a.insertAdjacentHTML("beforebegin",b),intersection=(c,a)=>{const b=new Set(a);return c.filter(a=>b.has(a))},intersectionBy=(c,a,b)=>{const d=new Set(a.map(b));return c.filter(a=>d.has(b(a)))},intersectionWith=(c,a,b)=>c.filter(c=>-1!==a.findIndex(a=>b(c,a))),is=(a,b)=>![,null].includes(b)&&b.constructor===a,isAfterDate=(a,b)=>a>b,isAnagram=(a,b)=>{const c=a=>a.toLowerCase().replace(/[^a-z0-9]/gi,"").split("").sort().join("");return c(a)===c(b)},isArrayLike=a=>null!=a&&"function"==typeof a[Symbol.iterator],isBeforeDate=(a,b)=>a<b,isBoolean=a=>"boolean"==typeof a,isBrowser=()=>![typeof window,typeof document].includes("undefined"),isBrowserTabFocused=()=>!document.hidden,isLowerCase=a=>a===a.toLowerCase(),isNil=a=>a===void 0||null===a,isNull=a=>null===a,isNumber=a=>!isNaN(parseFloat(a))&&isFinite(a),isObject=a=>a===Object(a),isObjectLike=a=>null!==a&&"object"==typeof a,isPlainObject=a=>!!a&&"object"==typeof a&&a.constructor===Object,isPromiseLike=a=>null!==a&&("object"==typeof a||"function"==typeof a)&&"function"==typeof a.then,isSameDate=(a,b)=>a.toISOString()===b.toISOString(),isString=a=>"string"==typeof a,isSymbol=a=>"symbol"==typeof a,isUndefined=a=>a===void 0,isUpperCase=a=>a===a.toUpperCase(),isValidJSON=a=>{try{return JSON.parse(a),!0}catch(a){return!1}},last=a=>a[a.length-1],matches=(a,b)=>Object.keys(b).every(c=>a.hasOwnProperty(c)&&a[c]===b[c]),maxDate=(...a)=>new Date(Math.max.apply(null,...a)),maxN=(a,b=1)=>[...a].sort((c,a)=>a-c).slice(0,b),minDate=(...a)=>new Date(Math.min.apply(null,...a)),minN=(a,b=1)=>[...a].sort((c,a)=>c-a).slice(0,b),negate=a=>(...b)=>!a(...b),nodeListToArray=a=>[...a],pad=(a,b,c=" ")=>a.padStart((a.length+b)/2,c).padEnd(b,c),radsToDegrees=a=>180*a/Math.PI,randomHexColorCode=()=>{let a=(1e6*(1048575*Math.random())).toString(16);return"#"+a.slice(0,6)},randomIntArrayInRange=(a,b,c=1)=>Array.from({length:c},()=>Math.floor(Math.random()*(b-a+1))+a),randomIntegerInRange=(a,b)=>Math.floor(Math.random()*(b-a+1))+a,randomNumberInRange=(a,b)=>Math.random()*(b-a)+a,redirect=(a,b=!0)=>b?window.location.href=a:window.location.replace(a),reverseString=a=>[...a].reverse().join(""),round=(a,b=0)=>+`${Math.round(`${a}e${b}`)}e-${b}`,runPromisesInSeries=a=>a.reduce((a,b)=>a.then(b),Promise.resolve()),sample=a=>a[Math.floor(Math.random()*a.length)],sampleSize=([...a],b=1)=>{for(let c=a.length;c;){const b=Math.floor(Math.random()*c--);[a[c],a[b]]=[a[b],a[c]]}return a.slice(0,b)};